<use taglib="POEM::Auth::TagLib">
<include src="top.xhti">
<style type="text/css">
#galleria {
  height: 660px;
}
#galleria {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
@media (max-height:730px)
{
  #galleria {
    height: 620px;
  }
}
@media (max-height:680px)
{
  #galleria {
    height: 570px;
  }
}
@media (max-height:630px)
{
  #galleria {
    height: 520px;
  }
}
@media (max-height:580px)
{
  #galleria {
    height: 470px;
  }
}
@media (max-height:530px)
{
  #galleria {
    height: 420px;
  }
}

#container {
  background: none repeat scroll top left transparent;
}
#content {
  padding: 0;
}
.rating, .ratingDescription {
  padding-left: 5px;
}
.rating, .rating img {
  vertical-align: text-bottom;
  display:inline-block;
}
.ratingDescription {
  font-weight: normal;
  font-size: 80%;
}
#infobox { display: none; }

.galleria-image img, .galleria-info a {
  cursor: pointer;
}
.galleria-info-description {
  padding-right: 20px;
}

.original {
  float: right;
}

/* Overlay */
#simplemodal-overlay {background-color:#000; cursor:wait;}

/* Container */
#simplemodal-container {height:360px; width:600px; color:#bbb; background-color:#333; border:4px solid #444; padding:12px;}
#simplemodal-container .simplemodal-data {padding:8px;}
#simplemodal-container code {background:#141414; border-left:3px solid #65B43D; color:#bbb; display:block; font-size:12px; margin-bottom:12px; padding:4px 6px 6px;}
#simplemodal-container a {color:#ddd;}
#simplemodal-container a.modalCloseImg {background:url(/site/img/x.png) no-repeat; width:25px; height:29px; display:inline; z-index:3200; position:absolute; top:-15px; right:-16px; cursor:pointer;}
#simplemodal-container h3 {color:#84b8d9;}
</style>
<set var="bundle" value="#[ENV.PATH_INFO]">
<do expression="#[bundle] =~ s/\/slideshow\.xhtml$//o">
<do expression="#[bundle] =~ s/^\/galleries//o">
<div id="galleria"></div>
<div id="infobox"></div>
<set var="theme" value="#[Input.theme] || 'azur'">
<if condition="#[theme] eq 'azur'">
<style type="text/css">
body .galleria-thumbnails .galleria-image {height:60px;}
body .galleria-thumbnailsx-container {left:142px}
body .galleria-fullscreen, body .galleria-play {height: 74px;background-position: 50% 28px;}
body .galleria-fullscreenx {left: 74px;}
body .galleria-bar {height:74px;}
body .galleria-stage {bottom:74px;}
</style>
</if>
<if condition="#[theme] eq 'folio'">
<style type="text/css">
body .galleria-thumbnails .galleria-image {width:150px;}
body .galleria-container {background: none repeat scroll top left transparent;}
body #galleria {padding: 10px;}
body .original {display: block; float: none;}
</style>
</if>
<script type="text/javascript">
var ajaxManager = $.manageAjax.create('cacheQueue', {
  queue: true,
  cacheResponse: true
});

Galleria.loadTheme('/site/galleria/themes/#[theme]/galleria.#[theme].min.js');
Galleria.configure({
  carouselSteps: 4,
  imageCrop: 'height',
  imageMargin: 10,
  imagePan: true,
  maxScaleRatio: 1,
  popupLinks: true,
  preload: 3,
  thumbnails: 'lazy',
  wait: true
});
Galleria.on('image', function(e) {
  var image = this.getData(e.index);
  $(e.imageTarget).bind('mouseup', function(){
    var gap = 50;
    var boxH = $(window).height() - gap * 2;     // top + bottom gap
    var boxW = $(window).width() - gap * 2;  // left + right gap
    $('#infobox').load('/cgi-bin/g.cgi?mode=infobox;-filt.id=' + image.id,
      function(){
        $('#infobox').modal({
          minHeight: boxH,
          minWidth: boxW,
          focus: false,
          autoResize: true,
          overlayClose: true
        });
    });
  });
  var rating = image.ratingCurrentUser > 0 ? image.ratingCurrentUser : image.ratingAverage;
  this.$('info-title').find('.rating').raty({score: rating, target: '.ratingDescription', click: setRating});
  ajaxManager.add({
    url: 'http://new.andreynovikov.info/gallery',
    data: {action: 'log', status: 2, id: image.id},
    xhrFields: {
      withCredentials: true
    }
  });
});
Galleria.ready(function()
{
  this.attachKeyboard({
    right: this.next,
    left: this.prev
  });

  $('a.slideshow').click(function(){
    loadLocation($(this).attr('href'));
    $("li.mega").removeClass("hovering");
    $(this).blur();
    return false;
  });

});
Galleria.run('#galleria');

var gallery = Galleria.get(0);

fn = function() {
  if (gallery._initialized)
  {
    loadQuery('#[bundle]?#[ENV.QUERY_STRING]');
    return;
  }
  window.setTimeout(fn, 10);
};
window.setTimeout(fn, 10);

function loadLocation(newLocation)
{
    if (history && history.pushState)
      history.pushState(newLocation, newLocation, newLocation);
    newLocation = newLocation.replace('/slideshow.xhtml', '');
    newLocation = newLocation.replace('/galleries', '');
    loadQuery(newLocation);
}

function loadQuery(query)
{
  if (query.indexOf('?') < 0)
    query = query + '?';
  $.ajax({
    url: '/cgi-bin/g.cgi'+query+';mode=jsonlist',
    dataType: 'json',
    success: loadImages
  });
}

function loadImages(images)
{
  var data = [];
  for (var i=0; i < images.length; i++)
  {
    var item = {};
    var image = images[i];
    item.image = image.path + '?format=slideshow';
    item.thumb = 'http://new.andreynovikov.info/gallery?action=thumbnail;id=' + image.id;
    item.big = image.path;
    item.title = image.description != "" ? image.description : image.name;
    item.description = '<a class="original" href="' + image.path + '?mode=original">Оригинал</a>';
    item.id = image.id;
    data.push(item);

    ajaxManager.add({
      url: 'http://new.andreynovikov.info/gallery?action=image;id=' + image.id,
      dataType: 'json',
      success: updateData(i),
      error:
        function(jqXHR, textStatus, errorThrown)
        {
          console.log(textStatus);
        }
    });
  }
  gallery.load(data)._createThumbnails().lazyLoadChunks(10, 200);
}

function updateData(index)
{
  return function(image)
         {
           var data = gallery.getData(index);
           if (data == undefined)
             return;
           var labels = [];
           for (var i in image.labels)
           {
             labels.push('<a onclick="loadLocation(\'/galleries/slideshow.xhtml?-filt.labels=' + image.labels[i].id + '\')">' + image.labels[i].name + '</a>');
           }
           data.description = data.description + labels.join(', ');
           data.title = data.title + '<span imageId="' + image.id + '" class="rating"></span><span class="ratingDescription"></span>';
           // data.video – An URL to a video, as per 1.2.7 we support Vimeo and Youtube URLs.
           // data.iframe = 'http://aino.com'; - we will use it for panoramas

           // custom data
           if (image.rating != undefined)
           {
             data.ratingCurrentUser = image.rating.currentuser;
             data.ratingAverage = image.rating.average;
             data.ratingVotes = image.rating.votes;
           }
        }
}

function setRating(score, evt)
{
  var rating = this;
  $(rating.opt.target).html('Подождите, пожалуйста...');
  $.ajax({
    url: '/cgi-bin/g.cgi',
    data: {mode: 'rating', rated: score, identity: $(".rating").attr('imageId')},
    cache: false,
    success: function(html){
      $(rating.opt.target).html('Спасибо, вы поставили ' + score);
    }
  });
}
</script>

<include src="bottom.xhti">
